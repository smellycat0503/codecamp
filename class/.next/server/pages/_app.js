/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function() {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./node_modules/apollo-upload-client/node_modules/extract-files/public/ReactNativeFile.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/apollo-upload-client/node_modules/extract-files/public/ReactNativeFile.js ***!
  \************************************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * Used to mark a\n * [React Native `File` substitute]{@link ReactNativeFileSubstitute}\n * in an object tree for [`extractFiles`]{@link extractFiles}. Itâ€™s too risky to\n * assume all objects with `uri`, `type` and `name` properties are files to\n * extract.\n * @kind class\n * @name ReactNativeFile\n * @param {ReactNativeFileSubstitute} file A [React Native](https://reactnative.dev) [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) substitute.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { ReactNativeFile } from 'extract-files';\n * ```\n *\n * ```js\n * import ReactNativeFile from 'extract-files/public/ReactNativeFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { ReactNativeFile } = require('extract-files');\n * ```\n *\n * ```js\n * const ReactNativeFile = require('extract-files/public/ReactNativeFile.js');\n * ```\n * @example <caption>An extractable file in [React Native](https://reactnative.dev).</caption>\n * ```js\n * const file = new ReactNativeFile({\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg',\n * });\n * ```\n */\nmodule.exports = class ReactNativeFile {\n  constructor({ uri, name, type }) {\n    this.uri = uri;\n    this.name = name;\n    this.type = type;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvZXh0cmFjdC1maWxlcy9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzPzQyYjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLG9DQUFvQztBQUNwQywwQ0FBMEMsbUJBQW1CO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywwQkFBMEI7QUFDckM7QUFDQTtBQUNBLFdBQVcsa0JBQWtCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxrQkFBa0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtCQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Fwb2xsby11cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9leHRyYWN0LWZpbGVzL3B1YmxpYy9SZWFjdE5hdGl2ZUZpbGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlZCB0byBtYXJrIGFcbiAqIFtSZWFjdCBOYXRpdmUgYEZpbGVgIHN1YnN0aXR1dGVde0BsaW5rIFJlYWN0TmF0aXZlRmlsZVN1YnN0aXR1dGV9XG4gKiBpbiBhbiBvYmplY3QgdHJlZSBmb3IgW2BleHRyYWN0RmlsZXNgXXtAbGluayBleHRyYWN0RmlsZXN9LiBJdOKAmXMgdG9vIHJpc2t5IHRvXG4gKiBhc3N1bWUgYWxsIG9iamVjdHMgd2l0aCBgdXJpYCwgYHR5cGVgIGFuZCBgbmFtZWAgcHJvcGVydGllcyBhcmUgZmlsZXMgdG9cbiAqIGV4dHJhY3QuXG4gKiBAa2luZCBjbGFzc1xuICogQG5hbWUgUmVhY3ROYXRpdmVGaWxlXG4gKiBAcGFyYW0ge1JlYWN0TmF0aXZlRmlsZVN1YnN0aXR1dGV9IGZpbGUgQSBbUmVhY3QgTmF0aXZlXShodHRwczovL3JlYWN0bmF0aXZlLmRldikgW2BGaWxlYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGUpIHN1YnN0aXR1dGUuXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5XYXlzIHRvIGBpbXBvcnRgLjwvY2FwdGlvbj5cbiAqIGBgYGpzXG4gKiBpbXBvcnQgeyBSZWFjdE5hdGl2ZUZpbGUgfSBmcm9tICdleHRyYWN0LWZpbGVzJztcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgUmVhY3ROYXRpdmVGaWxlIGZyb20gJ2V4dHJhY3QtZmlsZXMvcHVibGljL1JlYWN0TmF0aXZlRmlsZS5qcyc7XG4gKiBgYGBcbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYHJlcXVpcmVgLjwvY2FwdGlvbj5cbiAqIGBgYGpzXG4gKiBjb25zdCB7IFJlYWN0TmF0aXZlRmlsZSB9ID0gcmVxdWlyZSgnZXh0cmFjdC1maWxlcycpO1xuICogYGBgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IFJlYWN0TmF0aXZlRmlsZSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMvcHVibGljL1JlYWN0TmF0aXZlRmlsZS5qcycpO1xuICogYGBgXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5BbiBleHRyYWN0YWJsZSBmaWxlIGluIFtSZWFjdCBOYXRpdmVdKGh0dHBzOi8vcmVhY3RuYXRpdmUuZGV2KS48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogY29uc3QgZmlsZSA9IG5ldyBSZWFjdE5hdGl2ZUZpbGUoe1xuICogICB1cmk6IHVyaUZyb21DYW1lcmFSb2xsLFxuICogICBuYW1lOiAnYS5qcGcnLFxuICogICB0eXBlOiAnaW1hZ2UvanBlZycsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGNsYXNzIFJlYWN0TmF0aXZlRmlsZSB7XG4gIGNvbnN0cnVjdG9yKHsgdXJpLCBuYW1lLCB0eXBlIH0pIHtcbiAgICB0aGlzLnVyaSA9IHVyaTtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/node_modules/extract-files/public/ReactNativeFile.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/node_modules/extract-files/public/extractFiles.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/apollo-upload-client/node_modules/extract-files/public/extractFiles.js ***!
  \*********************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nconst defaultIsExtractableFile = __webpack_require__(/*! ./isExtractableFile.js */ \"./node_modules/apollo-upload-client/node_modules/extract-files/public/isExtractableFile.js\");\n\n/**\n * Clones a value, recursively extracting\n * [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File),\n * [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) and\n * [`ReactNativeFile`]{@link ReactNativeFile} instances with their\n * [object paths]{@link ObjectPath}, replacing them with `null`.\n * [`FileList`](https://developer.mozilla.org/en-US/docs/Web/API/Filelist) instances\n * are treated as [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\n * instance arrays.\n * @kind function\n * @name extractFiles\n * @param {*} value Value (typically an object tree) to extract files from.\n * @param {ObjectPath} [path=''] Prefix for object paths for extracted files.\n * @param {ExtractableFileMatcher} [isExtractableFile=isExtractableFile] The function used to identify extractable files.\n * @returns {ExtractFilesResult} Result.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { extractFiles } from 'extract-files';\n * ```\n *\n * ```js\n * import extractFiles from 'extract-files/public/extractFiles.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { extractFiles } = require('extract-files');\n * ```\n *\n * ```js\n * const extractFiles = require('extract-files/public/extractFiles.js');\n * ```\n * @example <caption>Extract files from an object.</caption>\n * For the following:\n *\n * ```js\n * const file1 = new File(['1'], '1.txt', { type: 'text/plain' });\n * const file2 = new File(['2'], '2.txt', { type: 'text/plain' });\n * const value = {\n *   a: file1,\n *   b: [file1, file2],\n * };\n *\n * const { clone, files } = extractFiles(value, 'prefix');\n * ```\n *\n * `value` remains the same.\n *\n * `clone` is:\n *\n * ```json\n * {\n *   \"a\": null,\n *   \"b\": [null, null]\n * }\n * ```\n *\n * `files` is a [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) instance containing:\n *\n * | Key     | Value                        |\n * | :------ | :--------------------------- |\n * | `file1` | `['prefix.a', 'prefix.b.0']` |\n * | `file2` | `['prefix.b.1']`             |\n */\nmodule.exports = function extractFiles(\n  value,\n  path = '',\n  isExtractableFile = defaultIsExtractableFile\n) {\n  let clone;\n  const files = new Map();\n\n  /**\n   * Adds a file to the extracted files map.\n   * @kind function\n   * @name extractFiles~addFile\n   * @param {Array<ObjectPath>} paths File object paths.\n   * @param {ExtractableFile} file Extracted file.\n   * @ignore\n   */\n  function addFile(paths, file) {\n    const storedPaths = files.get(file);\n    if (storedPaths) storedPaths.push(...paths);\n    else files.set(file, paths);\n  }\n\n  if (isExtractableFile(value)) {\n    clone = null;\n    addFile([path], value);\n  } else {\n    const prefix = path ? `${path}.` : '';\n\n    if (typeof FileList !== 'undefined' && value instanceof FileList)\n      clone = Array.prototype.map.call(value, (file, i) => {\n        addFile([`${prefix}${i}`], file);\n        return null;\n      });\n    else if (Array.isArray(value))\n      clone = value.map((child, i) => {\n        const result = extractFiles(child, `${prefix}${i}`, isExtractableFile);\n        result.files.forEach(addFile);\n        return result.clone;\n      });\n    else if (value && value.constructor === Object) {\n      clone = {};\n      for (const i in value) {\n        const result = extractFiles(\n          value[i],\n          `${prefix}${i}`,\n          isExtractableFile\n        );\n        result.files.forEach(addFile);\n        clone[i] = result.clone;\n      }\n    } else clone = value;\n  }\n\n  return { clone, files };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvZXh0cmFjdC1maWxlcy9wdWJsaWMvZXh0cmFjdEZpbGVzLmpzPzQ4ZTUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUNBQWlDLG1CQUFPLENBQUMsMEhBQXdCOztBQUVqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0Msa0JBQWtCLGlCQUFpQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxFQUFFO0FBQ2IsV0FBVyxXQUFXO0FBQ3RCLFdBQVcsdUJBQXVCO0FBQ2xDLGFBQWEsbUJBQW1CO0FBQ2hDO0FBQ0E7QUFDQSxXQUFXLGVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLHFCQUFxQjtBQUNoRSwyQ0FBMkMscUJBQXFCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLGVBQWU7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxrQkFBa0I7QUFDL0IsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNILDZCQUE2QixLQUFLOztBQUVsQztBQUNBO0FBQ0Esb0JBQW9CLE9BQU8sRUFBRSxFQUFFO0FBQy9CO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSw4Q0FBOEMsT0FBTyxFQUFFLEVBQUU7QUFDekQ7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxPQUFPLEVBQUUsRUFBRTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBLFVBQVU7QUFDViIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvZXh0cmFjdC1maWxlcy9wdWJsaWMvZXh0cmFjdEZpbGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBkZWZhdWx0SXNFeHRyYWN0YWJsZUZpbGUgPSByZXF1aXJlKCcuL2lzRXh0cmFjdGFibGVGaWxlLmpzJyk7XG5cbi8qKlxuICogQ2xvbmVzIGEgdmFsdWUsIHJlY3Vyc2l2ZWx5IGV4dHJhY3RpbmdcbiAqIFtgRmlsZWBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GaWxlKSxcbiAqIFtgQmxvYmBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9CbG9iKSBhbmRcbiAqIFtgUmVhY3ROYXRpdmVGaWxlYF17QGxpbmsgUmVhY3ROYXRpdmVGaWxlfSBpbnN0YW5jZXMgd2l0aCB0aGVpclxuICogW29iamVjdCBwYXRoc117QGxpbmsgT2JqZWN0UGF0aH0sIHJlcGxhY2luZyB0aGVtIHdpdGggYG51bGxgLlxuICogW2BGaWxlTGlzdGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GaWxlbGlzdCkgaW5zdGFuY2VzXG4gKiBhcmUgdHJlYXRlZCBhcyBbYEZpbGVgXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRmlsZSlcbiAqIGluc3RhbmNlIGFycmF5cy5cbiAqIEBraW5kIGZ1bmN0aW9uXG4gKiBAbmFtZSBleHRyYWN0RmlsZXNcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVmFsdWUgKHR5cGljYWxseSBhbiBvYmplY3QgdHJlZSkgdG8gZXh0cmFjdCBmaWxlcyBmcm9tLlxuICogQHBhcmFtIHtPYmplY3RQYXRofSBbcGF0aD0nJ10gUHJlZml4IGZvciBvYmplY3QgcGF0aHMgZm9yIGV4dHJhY3RlZCBmaWxlcy5cbiAqIEBwYXJhbSB7RXh0cmFjdGFibGVGaWxlTWF0Y2hlcn0gW2lzRXh0cmFjdGFibGVGaWxlPWlzRXh0cmFjdGFibGVGaWxlXSBUaGUgZnVuY3Rpb24gdXNlZCB0byBpZGVudGlmeSBleHRyYWN0YWJsZSBmaWxlcy5cbiAqIEByZXR1cm5zIHtFeHRyYWN0RmlsZXNSZXN1bHR9IFJlc3VsdC5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IGV4dHJhY3RGaWxlcyB9IGZyb20gJ2V4dHJhY3QtZmlsZXMnO1xuICogYGBgXG4gKlxuICogYGBganNcbiAqIGltcG9ydCBleHRyYWN0RmlsZXMgZnJvbSAnZXh0cmFjdC1maWxlcy9wdWJsaWMvZXh0cmFjdEZpbGVzLmpzJztcbiAqIGBgYFxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgcmVxdWlyZWAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGNvbnN0IHsgZXh0cmFjdEZpbGVzIH0gPSByZXF1aXJlKCdleHRyYWN0LWZpbGVzJyk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgZXh0cmFjdEZpbGVzID0gcmVxdWlyZSgnZXh0cmFjdC1maWxlcy9wdWJsaWMvZXh0cmFjdEZpbGVzLmpzJyk7XG4gKiBgYGBcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkV4dHJhY3QgZmlsZXMgZnJvbSBhbiBvYmplY3QuPC9jYXB0aW9uPlxuICogRm9yIHRoZSBmb2xsb3dpbmc6XG4gKlxuICogYGBganNcbiAqIGNvbnN0IGZpbGUxID0gbmV3IEZpbGUoWycxJ10sICcxLnR4dCcsIHsgdHlwZTogJ3RleHQvcGxhaW4nIH0pO1xuICogY29uc3QgZmlsZTIgPSBuZXcgRmlsZShbJzInXSwgJzIudHh0JywgeyB0eXBlOiAndGV4dC9wbGFpbicgfSk7XG4gKiBjb25zdCB2YWx1ZSA9IHtcbiAqICAgYTogZmlsZTEsXG4gKiAgIGI6IFtmaWxlMSwgZmlsZTJdLFxuICogfTtcbiAqXG4gKiBjb25zdCB7IGNsb25lLCBmaWxlcyB9ID0gZXh0cmFjdEZpbGVzKHZhbHVlLCAncHJlZml4Jyk7XG4gKiBgYGBcbiAqXG4gKiBgdmFsdWVgIHJlbWFpbnMgdGhlIHNhbWUuXG4gKlxuICogYGNsb25lYCBpczpcbiAqXG4gKiBgYGBqc29uXG4gKiB7XG4gKiAgIFwiYVwiOiBudWxsLFxuICogICBcImJcIjogW251bGwsIG51bGxdXG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBgZmlsZXNgIGlzIGEgW2BNYXBgXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9NYXApIGluc3RhbmNlIGNvbnRhaW5pbmc6XG4gKlxuICogfCBLZXkgICAgIHwgVmFsdWUgICAgICAgICAgICAgICAgICAgICAgICB8XG4gKiB8IDotLS0tLS0gfCA6LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgYGZpbGUxYCB8IGBbJ3ByZWZpeC5hJywgJ3ByZWZpeC5iLjAnXWAgfFxuICogfCBgZmlsZTJgIHwgYFsncHJlZml4LmIuMSddYCAgICAgICAgICAgICB8XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXh0cmFjdEZpbGVzKFxuICB2YWx1ZSxcbiAgcGF0aCA9ICcnLFxuICBpc0V4dHJhY3RhYmxlRmlsZSA9IGRlZmF1bHRJc0V4dHJhY3RhYmxlRmlsZVxuKSB7XG4gIGxldCBjbG9uZTtcbiAgY29uc3QgZmlsZXMgPSBuZXcgTWFwKCk7XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBmaWxlIHRvIHRoZSBleHRyYWN0ZWQgZmlsZXMgbWFwLlxuICAgKiBAa2luZCBmdW5jdGlvblxuICAgKiBAbmFtZSBleHRyYWN0RmlsZXN+YWRkRmlsZVxuICAgKiBAcGFyYW0ge0FycmF5PE9iamVjdFBhdGg+fSBwYXRocyBGaWxlIG9iamVjdCBwYXRocy5cbiAgICogQHBhcmFtIHtFeHRyYWN0YWJsZUZpbGV9IGZpbGUgRXh0cmFjdGVkIGZpbGUuXG4gICAqIEBpZ25vcmVcbiAgICovXG4gIGZ1bmN0aW9uIGFkZEZpbGUocGF0aHMsIGZpbGUpIHtcbiAgICBjb25zdCBzdG9yZWRQYXRocyA9IGZpbGVzLmdldChmaWxlKTtcbiAgICBpZiAoc3RvcmVkUGF0aHMpIHN0b3JlZFBhdGhzLnB1c2goLi4ucGF0aHMpO1xuICAgIGVsc2UgZmlsZXMuc2V0KGZpbGUsIHBhdGhzKTtcbiAgfVxuXG4gIGlmIChpc0V4dHJhY3RhYmxlRmlsZSh2YWx1ZSkpIHtcbiAgICBjbG9uZSA9IG51bGw7XG4gICAgYWRkRmlsZShbcGF0aF0sIHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICBjb25zdCBwcmVmaXggPSBwYXRoID8gYCR7cGF0aH0uYCA6ICcnO1xuXG4gICAgaWYgKHR5cGVvZiBGaWxlTGlzdCAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBGaWxlTGlzdClcbiAgICAgIGNsb25lID0gQXJyYXkucHJvdG90eXBlLm1hcC5jYWxsKHZhbHVlLCAoZmlsZSwgaSkgPT4ge1xuICAgICAgICBhZGRGaWxlKFtgJHtwcmVmaXh9JHtpfWBdLCBmaWxlKTtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9KTtcbiAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSlcbiAgICAgIGNsb25lID0gdmFsdWUubWFwKChjaGlsZCwgaSkgPT4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBleHRyYWN0RmlsZXMoY2hpbGQsIGAke3ByZWZpeH0ke2l9YCwgaXNFeHRyYWN0YWJsZUZpbGUpO1xuICAgICAgICByZXN1bHQuZmlsZXMuZm9yRWFjaChhZGRGaWxlKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5jbG9uZTtcbiAgICAgIH0pO1xuICAgIGVsc2UgaWYgKHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yID09PSBPYmplY3QpIHtcbiAgICAgIGNsb25lID0ge307XG4gICAgICBmb3IgKGNvbnN0IGkgaW4gdmFsdWUpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gZXh0cmFjdEZpbGVzKFxuICAgICAgICAgIHZhbHVlW2ldLFxuICAgICAgICAgIGAke3ByZWZpeH0ke2l9YCxcbiAgICAgICAgICBpc0V4dHJhY3RhYmxlRmlsZVxuICAgICAgICApO1xuICAgICAgICByZXN1bHQuZmlsZXMuZm9yRWFjaChhZGRGaWxlKTtcbiAgICAgICAgY2xvbmVbaV0gPSByZXN1bHQuY2xvbmU7XG4gICAgICB9XG4gICAgfSBlbHNlIGNsb25lID0gdmFsdWU7XG4gIH1cblxuICByZXR1cm4geyBjbG9uZSwgZmlsZXMgfTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/node_modules/extract-files/public/extractFiles.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/node_modules/extract-files/public/isExtractableFile.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/apollo-upload-client/node_modules/extract-files/public/isExtractableFile.js ***!
  \**************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nconst ReactNativeFile = __webpack_require__(/*! ./ReactNativeFile.js */ \"./node_modules/apollo-upload-client/node_modules/extract-files/public/ReactNativeFile.js\");\n\n/**\n * Checks if a value is an [extractable file]{@link ExtractableFile}.\n * @kind function\n * @name isExtractableFile\n * @type {ExtractableFileMatcher}\n * @param {*} value Value to check.\n * @returns {boolean} Is the value an [extractable file]{@link ExtractableFile}.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { isExtractableFile } from 'extract-files';\n * ```\n *\n * ```js\n * import isExtractableFile from 'extract-files/public/isExtractableFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { isExtractableFile } = require('extract-files');\n * ```\n *\n * ```js\n * const isExtractableFile = require('extract-files/public/isExtractableFile.js');\n * ```\n */\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9ub2RlX21vZHVsZXMvZXh0cmFjdC1maWxlcy9wdWJsaWMvaXNFeHRyYWN0YWJsZUZpbGUuanM/OWEwMSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYix3QkFBd0IsbUJBQU8sQ0FBQyxzSEFBc0I7O0FBRXREO0FBQ0EsOENBQThDLHNCQUFzQjtBQUNwRTtBQUNBO0FBQ0EsVUFBVTtBQUNWLFdBQVcsRUFBRTtBQUNiLGFBQWEsUUFBUSxvQ0FBb0Msc0JBQXNCO0FBQy9FO0FBQ0E7QUFDQSxXQUFXLG9CQUFvQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsb0JBQW9CO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Fwb2xsby11cGxvYWQtY2xpZW50L25vZGVfbW9kdWxlcy9leHRyYWN0LWZpbGVzL3B1YmxpYy9pc0V4dHJhY3RhYmxlRmlsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVGaWxlID0gcmVxdWlyZSgnLi9SZWFjdE5hdGl2ZUZpbGUuanMnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSB2YWx1ZSBpcyBhbiBbZXh0cmFjdGFibGUgZmlsZV17QGxpbmsgRXh0cmFjdGFibGVGaWxlfS5cbiAqIEBraW5kIGZ1bmN0aW9uXG4gKiBAbmFtZSBpc0V4dHJhY3RhYmxlRmlsZVxuICogQHR5cGUge0V4dHJhY3RhYmxlRmlsZU1hdGNoZXJ9XG4gKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IElzIHRoZSB2YWx1ZSBhbiBbZXh0cmFjdGFibGUgZmlsZV17QGxpbmsgRXh0cmFjdGFibGVGaWxlfS5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IGlzRXh0cmFjdGFibGVGaWxlIH0gZnJvbSAnZXh0cmFjdC1maWxlcyc7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogaW1wb3J0IGlzRXh0cmFjdGFibGVGaWxlIGZyb20gJ2V4dHJhY3QtZmlsZXMvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzJztcbiAqIGBgYFxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgcmVxdWlyZWAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGNvbnN0IHsgaXNFeHRyYWN0YWJsZUZpbGUgfSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMnKTtcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBpc0V4dHJhY3RhYmxlRmlsZSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzJyk7XG4gKiBgYGBcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0V4dHJhY3RhYmxlRmlsZSh2YWx1ZSkge1xuICByZXR1cm4gKFxuICAgICh0eXBlb2YgRmlsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBGaWxlKSB8fFxuICAgICh0eXBlb2YgQmxvYiAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBCbG9iKSB8fFxuICAgIHZhbHVlIGluc3RhbmNlb2YgUmVhY3ROYXRpdmVGaWxlXG4gICk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/node_modules/extract-files/public/isExtractableFile.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/public/ReactNativeFile.js":
/*!*********************************************************************!*\
  !*** ./node_modules/apollo-upload-client/public/ReactNativeFile.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Used to mark\n * [React Native `File` substitutes]{@link ReactNativeFileSubstitute} as itâ€™s\n * too risky to assume all objects with `uri`, `type` and `name` properties are\n * extractable files.\n * @kind class\n * @name ReactNativeFile\n * @param {ReactNativeFileSubstitute} file A [React Native](https://reactnative.dev) [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) substitute.\n * @see [`extract-files` `ReactNativeFile` docs](https://github.com/jaydenseric/extract-files#class-reactnativefile).\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { ReactNativeFile } from 'apollo-upload-client';\n * ```\n *\n * ```js\n * import ReactNativeFile from 'apollo-upload-client/public/ReactNativeFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { ReactNativeFile } = require('apollo-upload-client');\n * ```\n *\n * ```js\n * const ReactNativeFile = require('apollo-upload-client/public/ReactNativeFile.js');\n * ```\n * @example <caption>A file in [React Native](https://reactnative.dev) that can be used in query or mutation variables.</caption>\n * ```js\n * const file = new ReactNativeFile({\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg',\n * });\n * ```\n */\nmodule.exports = __webpack_require__(/*! extract-files/public/ReactNativeFile.js */ \"./node_modules/apollo-upload-client/node_modules/extract-files/public/ReactNativeFile.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzP2RhYjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLHFDQUFxQyxnQ0FBZ0M7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQztBQUNBO0FBQ0E7QUFDQSxXQUFXLGtCQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsa0JBQWtCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBLCtLQUFtRSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZWQgdG8gbWFya1xuICogW1JlYWN0IE5hdGl2ZSBgRmlsZWAgc3Vic3RpdHV0ZXNde0BsaW5rIFJlYWN0TmF0aXZlRmlsZVN1YnN0aXR1dGV9IGFzIGl04oCZc1xuICogdG9vIHJpc2t5IHRvIGFzc3VtZSBhbGwgb2JqZWN0cyB3aXRoIGB1cmlgLCBgdHlwZWAgYW5kIGBuYW1lYCBwcm9wZXJ0aWVzIGFyZVxuICogZXh0cmFjdGFibGUgZmlsZXMuXG4gKiBAa2luZCBjbGFzc1xuICogQG5hbWUgUmVhY3ROYXRpdmVGaWxlXG4gKiBAcGFyYW0ge1JlYWN0TmF0aXZlRmlsZVN1YnN0aXR1dGV9IGZpbGUgQSBbUmVhY3QgTmF0aXZlXShodHRwczovL3JlYWN0bmF0aXZlLmRldikgW2BGaWxlYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGUpIHN1YnN0aXR1dGUuXG4gKiBAc2VlIFtgZXh0cmFjdC1maWxlc2AgYFJlYWN0TmF0aXZlRmlsZWAgZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2pheWRlbnNlcmljL2V4dHJhY3QtZmlsZXMjY2xhc3MtcmVhY3RuYXRpdmVmaWxlKS5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IFJlYWN0TmF0aXZlRmlsZSB9IGZyb20gJ2Fwb2xsby11cGxvYWQtY2xpZW50JztcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgUmVhY3ROYXRpdmVGaWxlIGZyb20gJ2Fwb2xsby11cGxvYWQtY2xpZW50L3B1YmxpYy9SZWFjdE5hdGl2ZUZpbGUuanMnO1xuICogYGBgXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5XYXlzIHRvIGByZXF1aXJlYC48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogY29uc3QgeyBSZWFjdE5hdGl2ZUZpbGUgfSA9IHJlcXVpcmUoJ2Fwb2xsby11cGxvYWQtY2xpZW50Jyk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgUmVhY3ROYXRpdmVGaWxlID0gcmVxdWlyZSgnYXBvbGxvLXVwbG9hZC1jbGllbnQvcHVibGljL1JlYWN0TmF0aXZlRmlsZS5qcycpO1xuICogYGBgXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5BIGZpbGUgaW4gW1JlYWN0IE5hdGl2ZV0oaHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYpIHRoYXQgY2FuIGJlIHVzZWQgaW4gcXVlcnkgb3IgbXV0YXRpb24gdmFyaWFibGVzLjwvY2FwdGlvbj5cbiAqIGBgYGpzXG4gKiBjb25zdCBmaWxlID0gbmV3IFJlYWN0TmF0aXZlRmlsZSh7XG4gKiAgIHVyaTogdXJpRnJvbUNhbWVyYVJvbGwsXG4gKiAgIG5hbWU6ICdhLmpwZycsXG4gKiAgIHR5cGU6ICdpbWFnZS9qcGVnJyxcbiAqIH0pO1xuICogYGBgXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnZXh0cmFjdC1maWxlcy9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/public/ReactNativeFile.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/public/createUploadLink.js":
/*!**********************************************************************!*\
  !*** ./node_modules/apollo-upload-client/public/createUploadLink.js ***!
  \**********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\nconst { ApolloLink, Observable } = __webpack_require__(/*! @apollo/client/core */ \"@apollo/client/core\");\nconst {\n  createSignalIfSupported,\n  fallbackHttpConfig,\n  parseAndCheckHttpResponse,\n  rewriteURIForGET,\n  selectHttpOptionsAndBody,\n  selectURI,\n  serializeFetchParameter,\n} = __webpack_require__(/*! @apollo/client/link/http */ \"@apollo/client/link/http\");\nconst extractFiles = __webpack_require__(/*! extract-files/public/extractFiles.js */ \"./node_modules/apollo-upload-client/node_modules/extract-files/public/extractFiles.js\");\nconst formDataAppendFile = __webpack_require__(/*! ./formDataAppendFile.js */ \"./node_modules/apollo-upload-client/public/formDataAppendFile.js\");\nconst isExtractableFile = __webpack_require__(/*! ./isExtractableFile.js */ \"./node_modules/apollo-upload-client/public/isExtractableFile.js\");\n\n/**\n * Creates a\n * [terminating Apollo Link](https://apollographql.com/docs/react/api/link/introduction/#the-terminating-link)\n * for [Apollo Client](https://apollographql.com/docs/react) that fetches a\n * [GraphQL multipart request](https://github.com/jaydenseric/graphql-multipart-request-spec)\n * if the GraphQL variables contain files (by default\n * [`FileList`](https://developer.mozilla.org/en-US/docs/Web/API/FileList),\n * [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File),\n * [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob), or\n * [`ReactNativeFile`](#class-reactnativefile) instances), or else fetches a\n * regular\n * [GraphQL POST or GET request](https://apollographql.com/docs/apollo-server/requests)\n * (depending on the config and GraphQL operation).\n *\n * Some of the options are similar to the\n * [`createHttpLink` options](https://apollographql.com/docs/react/api/link/apollo-link-http/#httplink-constructor-options).\n * @see [GraphQL multipart request spec](https://github.com/jaydenseric/graphql-multipart-request-spec).\n * @kind function\n * @name createUploadLink\n * @param {object} options Options.\n * @param {string} [options.uri='/graphql'] GraphQL endpoint URI.\n * @param {boolean} [options.useGETForQueries] Should GET be used to fetch queries, if there are no files to upload.\n * @param {ExtractableFileMatcher} [options.isExtractableFile=isExtractableFile] Customizes how files are matched in the GraphQL operation for extraction.\n * @param {class} [options.FormData] [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) implementation to use, defaulting to the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) global.\n * @param {FormDataFileAppender} [options.formDataAppendFile=formDataAppendFile] Customizes how extracted files are appended to the [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) instance.\n * @param {Function} [options.fetch] [`fetch`](https://fetch.spec.whatwg.org) implementation to use, defaulting to the [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch) global.\n * @param {FetchOptions} [options.fetchOptions] [`fetch` options]{@link FetchOptions}; overridden by upload requirements.\n * @param {string} [options.credentials] Overrides `options.fetchOptions.credentials`.\n * @param {object} [options.headers] Merges with and overrides `options.fetchOptions.headers`.\n * @param {boolean} [options.includeExtensions=false] Toggles sending `extensions` fields to the GraphQL server.\n * @returns {ApolloLink} A [terminating Apollo Link](https://apollographql.com/docs/react/api/link/introduction/#the-terminating-link).\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { createUploadLink } from 'apollo-upload-client';\n * ```\n *\n * ```js\n * import createUploadLink from 'apollo-upload-client/public/createUploadLink.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { createUploadLink } = require('apollo-upload-client');\n * ```\n *\n * ```js\n * const createUploadLink = require('apollo-upload-client/public/createUploadLink.js');\n * ```\n * @example <caption>A basic Apollo Client setup.</caption>\n * ```js\n * import { ApolloClient, InMemoryCache } from '@apollo/client';\n * import { createUploadLink } from 'apollo-upload-client';\n *\n * const client = new ApolloClient({\n *   cache: new InMemoryCache(),\n *   link: createUploadLink(),\n * });\n * ```\n */\nmodule.exports = function createUploadLink({\n  uri: fetchUri = '/graphql',\n  useGETForQueries,\n  isExtractableFile: customIsExtractableFile = isExtractableFile,\n  FormData: CustomFormData,\n  formDataAppendFile: customFormDataAppendFile = formDataAppendFile,\n  fetch: customFetch,\n  fetchOptions,\n  credentials,\n  headers,\n  includeExtensions,\n} = {}) {\n  const linkConfig = {\n    http: { includeExtensions },\n    options: fetchOptions,\n    credentials,\n    headers,\n  };\n\n  return new ApolloLink((operation) => {\n    const context = operation.getContext();\n    const {\n      // Apollo Studio client awareness `name` and `version` can be configured\n      // via `ApolloClient` constructor options:\n      // https://apollographql.com/docs/studio/client-awareness/#using-apollo-server-and-apollo-client\n      clientAwareness: { name, version } = {},\n      headers,\n    } = context;\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: {\n        // Client awareness headers can be overridden by context `headers`.\n        ...(name && { 'apollographql-client-name': name }),\n        ...(version && { 'apollographql-client-version': version }),\n        ...headers,\n      },\n    };\n\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig\n    );\n\n    const { clone, files } = extractFiles(body, '', customIsExtractableFile);\n\n    let uri = selectURI(operation, fetchUri);\n\n    if (files.size) {\n      // Automatically set by `fetch` when the `body` is a `FormData` instance.\n      delete options.headers['content-type'];\n\n      // GraphQL multipart request spec:\n      // https://github.com/jaydenseric/graphql-multipart-request-spec\n\n      const RuntimeFormData = CustomFormData || FormData;\n\n      const form = new RuntimeFormData();\n\n      form.append('operations', serializeFetchParameter(clone, 'Payload'));\n\n      const map = {};\n      let i = 0;\n      files.forEach((paths) => {\n        map[++i] = paths;\n      });\n      form.append('map', JSON.stringify(map));\n\n      i = 0;\n      files.forEach((paths, file) => {\n        customFormDataAppendFile(form, ++i, file);\n      });\n\n      options.body = form;\n    } else {\n      if (\n        useGETForQueries &&\n        // If the operation contains some mutations GET shouldnâ€™t be used.\n        !operation.query.definitions.some(\n          (definition) =>\n            definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation'\n        )\n      )\n        options.method = 'GET';\n\n      if (options.method === 'GET') {\n        const { newURI, parseError } = rewriteURIForGET(uri, body);\n        if (parseError)\n          // Apolloâ€™s `HttpLink` uses `fromError` for this, but it's not\n          // exported from `@apollo/client/link/http`.\n          return new Observable((observer) => {\n            observer.error(parseError);\n          });\n        uri = newURI;\n      } else options.body = serializeFetchParameter(clone, 'Payload');\n    }\n\n    const { controller } = createSignalIfSupported();\n\n    if (controller) {\n      if (options.signal)\n        // Respect the user configured abort controller signal.\n        options.signal.aborted\n          ? // Signal already aborted, so immediately abort.\n            controller.abort()\n          : // Signal not already aborted, so setup a listener to abort when it\n            // does.\n            options.signal.addEventListener(\n              'abort',\n              () => {\n                controller.abort();\n              },\n              {\n                // Prevent a memory leak if the user configured abort controller\n                // is long lasting, or controls multiple things.\n                once: true,\n              }\n            );\n\n      options.signal = controller.signal;\n    }\n\n    const runtimeFetch = customFetch || fetch;\n\n    return new Observable((observer) => {\n      // Used to track if the observable is being cleaned up.\n      let cleaningUp;\n\n      runtimeFetch(uri, options)\n        .then((response) => {\n          // Forward the response on the context.\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then((result) => {\n          observer.next(result);\n          observer.complete();\n        })\n        .catch((error) => {\n          // If the observable is being cleaned up, there is no need to call\n          // next or error because there are no more subscribers. An error after\n          // cleanup begins is likely from the cleanup function aborting the\n          // fetch.\n          if (!cleaningUp) {\n            // For errors such as an invalid fetch URI there will be no GraphQL\n            // result with errors or data to forward.\n            if (error.result && error.result.errors && error.result.data)\n              observer.next(error.result);\n\n            observer.error(error);\n          }\n        });\n\n      // Cleanup function.\n      return () => {\n        cleaningUp = true;\n\n        // Abort fetch. Itâ€™s ok to signal an abort even when not fetching.\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/public/createUploadLink.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/public/formDataAppendFile.js":
/*!************************************************************************!*\
  !*** ./node_modules/apollo-upload-client/public/formDataAppendFile.js ***!
  \************************************************************************/
/***/ (function(module) {

"use strict";
eval("\n\n/**\n * The default implementation for [`createUploadLink`]{@link createUploadLink}\n * `options.formDataAppendFile` that uses the standard\n * [`FormData.append`](https://developer.mozilla.org/en-US/docs/Web/API/FormData/append)\n * method.\n * @kind function\n * @name formDataAppendFile\n * @type {FormDataFileAppender}\n * @param {FormData} formData [`FormData`](https://developer.mozilla.org/en-US/docs/Web/API/FormData) instance to append the specified file to.\n * @param {string} fieldName Field name for the file.\n * @param {*} file File to append.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { formDataAppendFile } from 'apollo-upload-client';\n * ```\n *\n * ```js\n * import formDataAppendFile from 'apollo-upload-client/public/formDataAppendFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { formDataAppendFile } = require('apollo-upload-client');\n * ```\n *\n * ```js\n * const formDataAppendFile = require('apollo-upload-client/public/formDataAppendFile.js');\n * ```\n */\nmodule.exports = function formDataAppendFile(formData, fieldName, file) {\n  formData.append(fieldName, file, file.name);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvZm9ybURhdGFBcHBlbmRGaWxlLmpzPzgxM2IiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSx1REFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsRUFBRTtBQUNiO0FBQ0E7QUFDQSxXQUFXLHFCQUFxQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUscUJBQXFCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvZm9ybURhdGFBcHBlbmRGaWxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IGltcGxlbWVudGF0aW9uIGZvciBbYGNyZWF0ZVVwbG9hZExpbmtgXXtAbGluayBjcmVhdGVVcGxvYWRMaW5rfVxuICogYG9wdGlvbnMuZm9ybURhdGFBcHBlbmRGaWxlYCB0aGF0IHVzZXMgdGhlIHN0YW5kYXJkXG4gKiBbYEZvcm1EYXRhLmFwcGVuZGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9Gb3JtRGF0YS9hcHBlbmQpXG4gKiBtZXRob2QuXG4gKiBAa2luZCBmdW5jdGlvblxuICogQG5hbWUgZm9ybURhdGFBcHBlbmRGaWxlXG4gKiBAdHlwZSB7Rm9ybURhdGFGaWxlQXBwZW5kZXJ9XG4gKiBAcGFyYW0ge0Zvcm1EYXRhfSBmb3JtRGF0YSBbYEZvcm1EYXRhYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0Zvcm1EYXRhKSBpbnN0YW5jZSB0byBhcHBlbmQgdGhlIHNwZWNpZmllZCBmaWxlIHRvLlxuICogQHBhcmFtIHtzdHJpbmd9IGZpZWxkTmFtZSBGaWVsZCBuYW1lIGZvciB0aGUgZmlsZS5cbiAqIEBwYXJhbSB7Kn0gZmlsZSBGaWxlIHRvIGFwcGVuZC5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IGZvcm1EYXRhQXBwZW5kRmlsZSB9IGZyb20gJ2Fwb2xsby11cGxvYWQtY2xpZW50JztcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBpbXBvcnQgZm9ybURhdGFBcHBlbmRGaWxlIGZyb20gJ2Fwb2xsby11cGxvYWQtY2xpZW50L3B1YmxpYy9mb3JtRGF0YUFwcGVuZEZpbGUuanMnO1xuICogYGBgXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5XYXlzIHRvIGByZXF1aXJlYC48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogY29uc3QgeyBmb3JtRGF0YUFwcGVuZEZpbGUgfSA9IHJlcXVpcmUoJ2Fwb2xsby11cGxvYWQtY2xpZW50Jyk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgZm9ybURhdGFBcHBlbmRGaWxlID0gcmVxdWlyZSgnYXBvbGxvLXVwbG9hZC1jbGllbnQvcHVibGljL2Zvcm1EYXRhQXBwZW5kRmlsZS5qcycpO1xuICogYGBgXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZm9ybURhdGFBcHBlbmRGaWxlKGZvcm1EYXRhLCBmaWVsZE5hbWUsIGZpbGUpIHtcbiAgZm9ybURhdGEuYXBwZW5kKGZpZWxkTmFtZSwgZmlsZSwgZmlsZS5uYW1lKTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/public/formDataAppendFile.js\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/public/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/apollo-upload-client/public/index.mjs ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createUploadLink\": function() { return /* reexport default export from named module */ _createUploadLink_js__WEBPACK_IMPORTED_MODULE_0__; },\n/* harmony export */   \"formDataAppendFile\": function() { return /* reexport default export from named module */ _formDataAppendFile_js__WEBPACK_IMPORTED_MODULE_1__; },\n/* harmony export */   \"isExtractableFile\": function() { return /* reexport default export from named module */ _isExtractableFile_js__WEBPACK_IMPORTED_MODULE_2__; },\n/* harmony export */   \"ReactNativeFile\": function() { return /* reexport default export from named module */ _ReactNativeFile_js__WEBPACK_IMPORTED_MODULE_3__; }\n/* harmony export */ });\n/* harmony import */ var _createUploadLink_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createUploadLink.js */ \"./node_modules/apollo-upload-client/public/createUploadLink.js\");\n/* harmony import */ var _formDataAppendFile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./formDataAppendFile.js */ \"./node_modules/apollo-upload-client/public/formDataAppendFile.js\");\n/* harmony import */ var _isExtractableFile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isExtractableFile.js */ \"./node_modules/apollo-upload-client/public/isExtractableFile.js\");\n/* harmony import */ var _ReactNativeFile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ReactNativeFile.js */ \"./node_modules/apollo-upload-client/public/ReactNativeFile.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvaW5kZXgubWpzPzYxZGYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBb0U7QUFDSTtBQUNGO0FBQ0oiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYXBvbGxvLXVwbG9hZC1jbGllbnQvcHVibGljL2luZGV4Lm1qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgY3JlYXRlVXBsb2FkTGluayB9IGZyb20gJy4vY3JlYXRlVXBsb2FkTGluay5qcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGZvcm1EYXRhQXBwZW5kRmlsZSB9IGZyb20gJy4vZm9ybURhdGFBcHBlbmRGaWxlLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgaXNFeHRyYWN0YWJsZUZpbGUgfSBmcm9tICcuL2lzRXh0cmFjdGFibGVGaWxlLmpzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUmVhY3ROYXRpdmVGaWxlIH0gZnJvbSAnLi9SZWFjdE5hdGl2ZUZpbGUuanMnO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/public/index.mjs\n");

/***/ }),

/***/ "./node_modules/apollo-upload-client/public/isExtractableFile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/apollo-upload-client/public/isExtractableFile.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * The default implementation for [`createUploadLink`]{@link createUploadLink}\n * `options.isExtractableFile`.\n * @kind function\n * @name isExtractableFile\n * @type {ExtractableFileMatcher}\n * @param {*} value Value to check.\n * @returns {boolean} Is the value an extractable file.\n * @see [`extract-files` `isExtractableFile` docs](https://github.com/jaydenseric/extract-files#function-isextractablefile).\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { isExtractableFile } from 'apollo-upload-client';\n * ```\n *\n * ```js\n * import isExtractableFile from 'apollo-upload-client/public/isExtractableFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { isExtractableFile } = require('apollo-upload-client');\n * ```\n *\n * ```js\n * const isExtractableFile = require('apollo-upload-client/public/isExtractableFile.js');\n * ```\n */\nmodule.exports = __webpack_require__(/*! extract-files/public/isExtractableFile.js */ \"./node_modules/apollo-upload-client/node_modules/extract-files/public/isExtractableFile.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL25vZGVfbW9kdWxlcy9hcG9sbG8tdXBsb2FkLWNsaWVudC9wdWJsaWMvaXNFeHRyYWN0YWJsZUZpbGUuanM/MDNhNCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBLHVEQUF1RDtBQUN2RDtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsV0FBVyxFQUFFO0FBQ2IsYUFBYSxRQUFRO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLFdBQVcsb0JBQW9CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSxvQkFBb0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUxBQXFFIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2Fwb2xsby11cGxvYWQtY2xpZW50L3B1YmxpYy9pc0V4dHJhY3RhYmxlRmlsZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBUaGUgZGVmYXVsdCBpbXBsZW1lbnRhdGlvbiBmb3IgW2BjcmVhdGVVcGxvYWRMaW5rYF17QGxpbmsgY3JlYXRlVXBsb2FkTGlua31cbiAqIGBvcHRpb25zLmlzRXh0cmFjdGFibGVGaWxlYC5cbiAqIEBraW5kIGZ1bmN0aW9uXG4gKiBAbmFtZSBpc0V4dHJhY3RhYmxlRmlsZVxuICogQHR5cGUge0V4dHJhY3RhYmxlRmlsZU1hdGNoZXJ9XG4gKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IElzIHRoZSB2YWx1ZSBhbiBleHRyYWN0YWJsZSBmaWxlLlxuICogQHNlZSBbYGV4dHJhY3QtZmlsZXNgIGBpc0V4dHJhY3RhYmxlRmlsZWAgZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2pheWRlbnNlcmljL2V4dHJhY3QtZmlsZXMjZnVuY3Rpb24taXNleHRyYWN0YWJsZWZpbGUpLlxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgaW1wb3J0YC48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogaW1wb3J0IHsgaXNFeHRyYWN0YWJsZUZpbGUgfSBmcm9tICdhcG9sbG8tdXBsb2FkLWNsaWVudCc7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogaW1wb3J0IGlzRXh0cmFjdGFibGVGaWxlIGZyb20gJ2Fwb2xsby11cGxvYWQtY2xpZW50L3B1YmxpYy9pc0V4dHJhY3RhYmxlRmlsZS5qcyc7XG4gKiBgYGBcbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYHJlcXVpcmVgLjwvY2FwdGlvbj5cbiAqIGBgYGpzXG4gKiBjb25zdCB7IGlzRXh0cmFjdGFibGVGaWxlIH0gPSByZXF1aXJlKCdhcG9sbG8tdXBsb2FkLWNsaWVudCcpO1xuICogYGBgXG4gKlxuICogYGBganNcbiAqIGNvbnN0IGlzRXh0cmFjdGFibGVGaWxlID0gcmVxdWlyZSgnYXBvbGxvLXVwbG9hZC1jbGllbnQvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzJyk7XG4gKiBgYGBcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCdleHRyYWN0LWZpbGVzL3B1YmxpYy9pc0V4dHJhY3RhYmxlRmlsZS5qcycpO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/apollo-upload-client/public/isExtractableFile.js\n");

/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/client */ \"@apollo/client\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_apollo_client__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var apollo_upload_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! apollo-upload-client */ \"./node_modules/apollo-upload-client/public/index.mjs\");\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ \"@fortawesome/fontawesome-svg-core\");\n/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_2__);\n\nvar _jsxFileName = \"/Users/parkminkyu/Desktop/codecamp_1\\u1100\\u1175_\\u1107\\u1161\\u11A8\\u1106\\u1175\\u11AB\\u1100\\u1172/class/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_2__.config.autoAddCss = false; // Tell Font Awesome to skip adding the CSS automatically since it's being imported above\n// const App = ({Component, pageProps}) => {\n//   const aaa = new ApolloClient({\n//     uri: 'http://backend.codebootcamp.co.kr/graphql',\n//     cache: new InMemoryCache(),\n//   })\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const uploadLink = (0,apollo_upload_client__WEBPACK_IMPORTED_MODULE_3__.createUploadLink)({\n    uri: 'http://example.codebootcamp.co.kr/graphql'\n  });\n  const client = new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.ApolloClient({\n    link: _apollo_client__WEBPACK_IMPORTED_MODULE_1__.ApolloLink.from([uploadLink]),\n    cache: new _apollo_client__WEBPACK_IMPORTED_MODULE_1__.InMemoryCache()\n  });\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_apollo_client__WEBPACK_IMPORTED_MODULE_1__.ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy8uL3BhZ2VzL19hcHAudHN4PzcyMTYiXSwibmFtZXMiOlsiY29uZmlnIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJ1cGxvYWRMaW5rIiwiY3JlYXRlVXBsb2FkTGluayIsInVyaSIsImNsaWVudCIsIkFwb2xsb0NsaWVudCIsImxpbmsiLCJBcG9sbG9MaW5rIiwiY2FjaGUiLCJJbk1lbW9yeUNhY2hlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBT0E7QUFFQTtBQUNBQSxnRkFBQSxHQUFvQixLQUFwQixDLENBQTBCO0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsU0FBU0MsS0FBVCxDQUFlO0FBQUNDLFdBQUQ7QUFBWUM7QUFBWixDQUFmLEVBQXVDO0FBQ3JDLFFBQU1DLFVBQVUsR0FBR0Msc0VBQWdCLENBQUM7QUFDbENDLE9BQUcsRUFBRTtBQUQ2QixHQUFELENBQW5DO0FBSUEsUUFBTUMsTUFBTSxHQUFHLElBQUlDLHdEQUFKLENBQWlCO0FBQzlCQyxRQUFJLEVBQUVDLDJEQUFBLENBQWdCLENBQUNOLFVBQUQsQ0FBaEIsQ0FEd0I7QUFFOUJPLFNBQUssRUFBRSxJQUFJQyx5REFBSjtBQUZ1QixHQUFqQixDQUFmO0FBS0Esc0JBQ0UsOERBQUMsMERBQUQ7QUFBZ0IsVUFBTSxFQUFFTCxNQUF4QjtBQUFBLDJCQUNFLDhEQUFDLFNBQUQsb0JBQWVKLFNBQWY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURGO0FBQUE7QUFBQTtBQUFBO0FBQUEsVUFERjtBQUtEOztBQUVELCtEQUFlRixLQUFmIiwiZmlsZSI6Ii4vcGFnZXMvX2FwcC50c3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBcG9sbG9DbGllbnQsXG4gIEFwb2xsb0xpbmssXG4gIEFwb2xsb1Byb3ZpZGVyLFxuICBJbk1lbW9yeUNhY2hlLFxufSBmcm9tICdAYXBvbGxvL2NsaWVudCdcbmltcG9ydCBHbG9iYWwgZnJvbSAnLi4vc3JjL2NvbW1vbnMvc3R5bGVzL2dsb2JhbFN0eWxlcydcbmltcG9ydCB7Y3JlYXRlVXBsb2FkTGlua30gZnJvbSAnYXBvbGxvLXVwbG9hZC1jbGllbnQnXG5cbmltcG9ydCB7Y29uZmlnfSBmcm9tICdAZm9ydGF3ZXNvbWUvZm9udGF3ZXNvbWUtc3ZnLWNvcmUnXG5jb25maWcuYXV0b0FkZENzcyA9IGZhbHNlIC8vIFRlbGwgRm9udCBBd2Vzb21lIHRvIHNraXAgYWRkaW5nIHRoZSBDU1MgYXV0b21hdGljYWxseSBzaW5jZSBpdCdzIGJlaW5nIGltcG9ydGVkIGFib3ZlXG5cbi8vIGNvbnN0IEFwcCA9ICh7Q29tcG9uZW50LCBwYWdlUHJvcHN9KSA9PiB7XG4vLyAgIGNvbnN0IGFhYSA9IG5ldyBBcG9sbG9DbGllbnQoe1xuLy8gICAgIHVyaTogJ2h0dHA6Ly9iYWNrZW5kLmNvZGVib290Y2FtcC5jby5rci9ncmFwaHFsJyxcbi8vICAgICBjYWNoZTogbmV3IEluTWVtb3J5Q2FjaGUoKSxcbi8vICAgfSlcbmZ1bmN0aW9uIE15QXBwKHtDb21wb25lbnQsIHBhZ2VQcm9wc30pIHtcbiAgY29uc3QgdXBsb2FkTGluayA9IGNyZWF0ZVVwbG9hZExpbmsoe1xuICAgIHVyaTogJ2h0dHA6Ly9leGFtcGxlLmNvZGVib290Y2FtcC5jby5rci9ncmFwaHFsJyxcbiAgfSlcblxuICBjb25zdCBjbGllbnQgPSBuZXcgQXBvbGxvQ2xpZW50KHtcbiAgICBsaW5rOiBBcG9sbG9MaW5rLmZyb20oW3VwbG9hZExpbmsgYXMgdW5rbm93biBhcyBBcG9sbG9MaW5rXSksXG4gICAgY2FjaGU6IG5ldyBJbk1lbW9yeUNhY2hlKCksXG4gIH0pXG5cbiAgcmV0dXJuIChcbiAgICA8QXBvbGxvUHJvdmlkZXIgY2xpZW50PXtjbGllbnR9PlxuICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgIDwvQXBvbGxvUHJvdmlkZXI+XG4gIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgTXlBcHBcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.tsx\n");

/***/ }),

/***/ "@apollo/client":
/*!*********************************!*\
  !*** external "@apollo/client" ***!
  \*********************************/
/***/ (function(module) {

"use strict";
module.exports = require("@apollo/client");;

/***/ }),

/***/ "@apollo/client/core":
/*!**************************************!*\
  !*** external "@apollo/client/core" ***!
  \**************************************/
/***/ (function(module) {

"use strict";
module.exports = require("@apollo/client/core");;

/***/ }),

/***/ "@apollo/client/link/http":
/*!*******************************************!*\
  !*** external "@apollo/client/link/http" ***!
  \*******************************************/
/***/ (function(module) {

"use strict";
module.exports = require("@apollo/client/link/http");;

/***/ }),

/***/ "@fortawesome/fontawesome-svg-core":
/*!****************************************************!*\
  !*** external "@fortawesome/fontawesome-svg-core" ***!
  \****************************************************/
/***/ (function(module) {

"use strict";
module.exports = require("@fortawesome/fontawesome-svg-core");;

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ (function(module) {

"use strict";
module.exports = require("react/jsx-dev-runtime");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
var __webpack_exports__ = (__webpack_exec__("./pages/_app.tsx"));
module.exports = __webpack_exports__;

})();